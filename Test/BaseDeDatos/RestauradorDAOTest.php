<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-05-18 at 05:29:23.
 */
require_once '..\BaseDeDatos\conexion_bd.php';
require_once '..\BaseDeDatos\Restauradores.php';
require_once '..\BaseDeDatos\RestauradorDAO.php';
require_once '..\BaseDeDatos\DataManagment.php';

class RestauradorDAOTest extends PHPUnit_Framework_TestCase {

    /**
     * @var RestauradorDAO
     */
    protected $restDao;
    protected $conexion;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() 
    {
           $this->restDao = new RestauradorDAO();
           $this->conexion = conexion_bd::conectar();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        conexion_bd::desconectar();
    }

    /**
     * @covers RestauradorDAO::registrarRestaurador
     * @todo   Implement testRegistrarRestaurador().
     */
    public function testRegistrarRestaurador() 
    {
        $expected = TRUE;

        $restaurador = new Restauradores(189913532, 'Juan Carlos', 3130912313, 'juancarlos@lucky.com', 'Henao');
        $actual = $this->restDao->registrarRestaurador($restaurador, $this->conexion);

        $this->assertEquals($expected, $actual);
    }

    /**
     * @covers RestauradorDAO::eliminarRestaurador
     * @todo   Implement testEliminarRestaurador().
     * @depends testRegistrarRestaurador
     */
    public function testEliminarRestaurador() 
    {
        $expected = TRUE;

        $cedula = 189913532;
        $actual = $this->restDao->eliminarRestaurador($cedula, $this->conexion);

        $this->assertEquals($expected, $actual);
    }

    /**
     * @covers RestauradorDAO::actualizarRestaurador
     * @todo   Implement testActualizarRestaurador().
     * @depends testRegistrarRestaurador
     */
    public function testActualizarRestaurador() 
    {
        $expected = TRUE;

        $cedula = 189913532;
        $restaurador = new Restauradores(189913100, 'Juan Ruiz', 3172329001, 'velasquez@lucky.com', 'Velasquez');

        $actual = $this->restDao->actualizarRestaurador($restaurador, $cedula, $this->conexion);

        $this->assertEquals($expected, $actual);
    }

}
